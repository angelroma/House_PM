//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace House_PM_Client.PatientServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PatientWCF", Namespace="http://schemas.datacontract.org/2004/07/House_PM_WCF")]
    [System.SerializableAttribute()]
    public partial class PatientWCF : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PatientServiceReference.IPatientServiceWCF")]
    public interface IPatientServiceWCF {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientServiceWCF/GetById", ReplyAction="http://tempuri.org/IPatientServiceWCF/GetByIdResponse")]
        House_PM_Client.PatientServiceReference.PatientWCF GetById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientServiceWCF/GetById", ReplyAction="http://tempuri.org/IPatientServiceWCF/GetByIdResponse")]
        System.Threading.Tasks.Task<House_PM_Client.PatientServiceReference.PatientWCF> GetByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientServiceWCF/GetAll", ReplyAction="http://tempuri.org/IPatientServiceWCF/GetAllResponse")]
        House_PM_Client.PatientServiceReference.PatientWCF[] GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientServiceWCF/GetAll", ReplyAction="http://tempuri.org/IPatientServiceWCF/GetAllResponse")]
        System.Threading.Tasks.Task<House_PM_Client.PatientServiceReference.PatientWCF[]> GetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientServiceWCF/Create", ReplyAction="http://tempuri.org/IPatientServiceWCF/CreateResponse")]
        string Create(House_PM_Client.PatientServiceReference.PatientWCF entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientServiceWCF/Create", ReplyAction="http://tempuri.org/IPatientServiceWCF/CreateResponse")]
        System.Threading.Tasks.Task<string> CreateAsync(House_PM_Client.PatientServiceReference.PatientWCF entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientServiceWCF/Update", ReplyAction="http://tempuri.org/IPatientServiceWCF/UpdateResponse")]
        string Update(House_PM_Client.PatientServiceReference.PatientWCF entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientServiceWCF/Update", ReplyAction="http://tempuri.org/IPatientServiceWCF/UpdateResponse")]
        System.Threading.Tasks.Task<string> UpdateAsync(House_PM_Client.PatientServiceReference.PatientWCF entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientServiceWCF/Delete", ReplyAction="http://tempuri.org/IPatientServiceWCF/DeleteResponse")]
        string Delete(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientServiceWCF/Delete", ReplyAction="http://tempuri.org/IPatientServiceWCF/DeleteResponse")]
        System.Threading.Tasks.Task<string> DeleteAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPatientServiceWCFChannel : House_PM_Client.PatientServiceReference.IPatientServiceWCF, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PatientServiceWCFClient : System.ServiceModel.ClientBase<House_PM_Client.PatientServiceReference.IPatientServiceWCF>, House_PM_Client.PatientServiceReference.IPatientServiceWCF {
        
        public PatientServiceWCFClient() {
        }
        
        public PatientServiceWCFClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PatientServiceWCFClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PatientServiceWCFClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PatientServiceWCFClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public House_PM_Client.PatientServiceReference.PatientWCF GetById(int id) {
            return base.Channel.GetById(id);
        }
        
        public System.Threading.Tasks.Task<House_PM_Client.PatientServiceReference.PatientWCF> GetByIdAsync(int id) {
            return base.Channel.GetByIdAsync(id);
        }
        
        public House_PM_Client.PatientServiceReference.PatientWCF[] GetAll() {
            return base.Channel.GetAll();
        }
        
        public System.Threading.Tasks.Task<House_PM_Client.PatientServiceReference.PatientWCF[]> GetAllAsync() {
            return base.Channel.GetAllAsync();
        }
        
        public string Create(House_PM_Client.PatientServiceReference.PatientWCF entity) {
            return base.Channel.Create(entity);
        }
        
        public System.Threading.Tasks.Task<string> CreateAsync(House_PM_Client.PatientServiceReference.PatientWCF entity) {
            return base.Channel.CreateAsync(entity);
        }
        
        public string Update(House_PM_Client.PatientServiceReference.PatientWCF entity) {
            return base.Channel.Update(entity);
        }
        
        public System.Threading.Tasks.Task<string> UpdateAsync(House_PM_Client.PatientServiceReference.PatientWCF entity) {
            return base.Channel.UpdateAsync(entity);
        }
        
        public string Delete(int id) {
            return base.Channel.Delete(id);
        }
        
        public System.Threading.Tasks.Task<string> DeleteAsync(int id) {
            return base.Channel.DeleteAsync(id);
        }
    }
}
